version: '3.8'

services:
  backend-auth:
    image: ssspamqe/ts-auth:${TS_AUTH_TAG}
    ports: 
      - "8081:8080"
    env_file:
      - .env
    depends_on:
      - postgres
      - liquibase
  
  backend-projects:
    image: ssspamqe/ts-projects:${TS_PROJECTS_TAG}
    env_file:
      - .env
    ports: 
      - "8082:8080"
    depends_on:
      - postgres
      - liquibase
      
  backend-resume:
    image: ssspamqe/ts-resume:${TS_RESUME_TAG}
    env_file:
      - .env
    ports: 
      - "8083:8080"
    depends_on:
      - postgres
      - liquibase

  backend-recommendations:
    image: ssspamqe/ts-recommendations:${TS_RECOMMENDATIONS_TAG}
    env_file:
      - .env
    ports: 
      - "8084:9090"
    depends_on:
      - postgres
      - liquibase

  frontend:
    image: ssspamqe/ts-frontend-prod:${TS_FRONTEND_TAG}
    ports: 
      - "3000:80"

  ml-recsys:
    image: ssspamqe/ts-recsys:${TS_RECSYS_TAG}
    env_file:
      - .env
    ports: 
      - "8001:8000"
  
  ml-embedder:
    image: ssspamqe/ts-embedder:${TS_EMBEDDER_TAG}
    env_file:
      - .env
    ports: 
      - "8002:8000"
    depends_on:
      - qdrant
      - postgres

  keydb:
    image: bitnami/keydb:6.3.4
    env_file:
      - .env
    volumes:
      - keydb_data:/data
    restart: unless-stopped

  qdrant:
    image: qdrant/qdrant:v1.2.0
    volumes:
      - qdrant_data:/qdrant/storage
    env_file:
      - .env
    restart: unless-stopped

  postgres:
    image: postgres:16
    restart: unless-stopped
    env_file:
      - .env
    volumes:      
      - pgdata:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4:9.4.0
    restart: unless-stopped
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    env_file:
      - .env
    depends_on:
      - postgres

  liquibase:
    image: liquibase/liquibase:4.32.0
    volumes:
      - ./migration:/migration
    working_dir: /migration
    depends_on:
      - postgres
    command: >
      --changeLogFile=changelog/changelog.yml
      --url=${DB_MAIN_JDBC}
      --username=${DB_MAIN_USER}
      --password=${DB_MAIN_PASSWORD}
      --driver=org.postgresql.Driver
      --logLevel=info
      update

volumes:
  pgdata:
  pgadmin_data:
  keydb_data:
  qdrant_data: