openapi: 3.0.3
info:
  title: Resume Service API
  description: API for managing user (student/professor) profile
  version: 1.0.0

servers:
  - url: http://localhost

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    BaseResponse:
      type: object
      description: Base response structure for all API responses
      properties:
        error:
          type: object
          nullable: true
          properties:
            code:
              type: string
              example: "VALIDATION_ERROR"
            text:
              type: string
              example: "Invalid input data"
        success:
          type: boolean

    ErrorResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: object
              nullable: true

    CreateProfileRequest:
      type: object
      description: Request body for creating a new profile
      required:
        - person_id
        - type
      properties:
        person_id:
          type: integer
          description: ID of the person to associate with this profile
        type:
          type: string
          enum: [student, professor]
          description: Type of the profile being created
        profile:
          type: object
          description: Profile-specific fields depending on type
          properties:
            name:
              type: string
            surname:
              type: string
            email:
              type: string
            study_group:
              type: string
              description: only for students (required)
            description:
              type: string
              nullable: true
              description: only for students
            github_alias:
              type: string
              description: only for students (required)
            tg_alias:
              type: string
              description: required only for students
            skills:
              type: array
              items:
                type: integer
              description: only for students
            roles:
              type: array
              items:
                type: integer
              description: only for students

    UpdateProfileRequest:
      type: object
      description: Request body for updating an existing profile
      properties:
        profile:
          type: object
          description: Fields to update in the profile (depends on profile type)
          properties:
            study_group:
              type: string
              description: only for students
            description:
              type: string
              nullable: true
              description: only for students
            github_alias:
              type: string
              description: only for students
            tg_alias:
              type: string
            skills:
              type: array
              items:
                type: integer
              description: only for students
            roles:
              type: array
              items:
                type: integer
              description: only for students

    PaginatedRoleResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Role'
        total:
          type: integer
          description: Total number of roles available
        page:
          type: integer
          description: Current page number
        pageSize:
          type: integer
          description: Number of roles per page

    PaginatedSkillResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Skill'
        total:
          type: integer
          description: Total number of skills available
        page:
          type: integer
          description: Current page number
        pageSize:
          type: integer
          description: Number of skills per page

    ProfileResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: object
              properties:
                type:
                  type: string
                  enum: [student, professor]
                person:
                  $ref: '#/components/schemas/Person'
                profile:
                  type: object
                  required: [name, surname, email]
                  properties:
                    name:
                      type: string
                    surname:
                      type: string
                    email:
                      type: string

    Person:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string

    Student:
      type: object
      description: Student profile information
      properties:
        person_id:
          type: integer
        study_group:
          type: string
          example: "CS-101"
        description:
          type: string
          nullable: true
        github_alias:
          type: string
        tg_alias:
          type: string
        skills:
          type: array
          items:
            type: integer
        roles:
          type: array
          items:
            type: integer 

    Professor:
      type: object
      description: Professor profile information
      properties:
        person_id:
          type: integer
        tg_alias:
          type: string
          nullable: true

    Skill:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
          nullable: true

    Role:
      type: object
      description: User role information
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
          nullable: true

paths:
  /profile:
    post:
      tags: [Profile]
      summary: Create new profile
      security:
        -bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProfileRequest'
      responses:
        '201':
          description: Profile created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Invalid input
        '409':
          description: Profile already exists

  /profile/{person_id}:
    get:
      tags: [Profile]
      summary: Get profile by ID
      description: Returns profile information for any person (student or professor)
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: person_id
          required: true
          schema:
            type: integer
          description: ID of the person whose profile is being requested
      responses:
        '200':
          description: Profile retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileResponse'
        '401':
          description: Unauthorized
        '404':
          description: Profile not found

    put:
      tags: [Profile]
      summary: Update profile by ID
      description: Updates profile information
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: person_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProfileRequest'
      responses:
        '200':
          description: Profile updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Invalid input
        '403':
          description: Forbidden
        '404':
          description: Profile not found
          
  /profile/{person_id}/skills:
    get:
      tags: [Profile]
      summary: Get skills of a profile
      description: Returns list of skills associated with the profile
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: person_id
          required: true
          schema:
            type: integer
          description: Person id
        - in: query
          name: page
          required: false
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number (starts from 1)
        - in: query
          name: pageSize
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          description: Number of items per page
      responses:
        '200':
          description: List of skills for the profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSkillResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden â€” Profile is not a student
        '404':
          description: Profile not found

    put:
      tags: [Profile]
      summary: Set skills for a profile
      description: Replace or add multiple skills to user profile
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: person_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                skill_ids:
                  type: array
                  items:
                    type: integer
              required:
                - skill_ids
      responses:
        '200':
          description: Skills added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Invalid input - skill_ids is required or invalid
        '403':
          description: Forbidden - User not authorized to modify this profile
        '404':
          description: Skill not found

    delete:
      tags: [Profile]
      summary: Remove multiple skills from a profile
      description: Delete skills from the profile by skill IDs
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: person_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                skill_ids:
                  type: array
                  items:
                    type: integer
              required:
                - skill_ids
      responses:
        '200':
          description: Skills removed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '403':
          description: Forbidden - User not authorized to modify this profile
        '404':
          description: One or more skills not found in profile

  /profile/{person_id}/roles:
    get:
      tags: [Profile]
      summary: Get roles of a profile
      description: Returns list of roles associated with the profile
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: person_id
          required: true
          schema:
            type: integer
          description: Person id
        - in: query
          name: page
          required: false
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number (starts from 1)
        - in: query
          name: pageSize
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          description: Number of items per page
      responses:
        '200':
          description: List of roles for the profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRoleResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden â€” Profile is not a student
        '404':
          description: Profile not found
      
    put:
      tags: [Profile]
      summary: Set roles for a profile
      description: Replace or add multiple roles to user profile
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: person_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                role_ids:
                  type: array
                  items:
                    type: integer
              required:
                - role_ids
      responses:
        '200':
          description: Roles added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Invalid input - role_id is required or invalid
        '403':
          description: Forbidden - User not authorized to modify this profile
        '404':
          description: Role not found

    delete:
      tags: [Profile]
      summary: Remove multiple roles from a profile
      description: Delete roles from the profile by role IDs
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: person_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                role_ids:
                  type: array
                  items:
                    type: integer
              required:
                - role_ids
      responses:
        '200':
          description: Roles removed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '403':
          description: Forbidden - User not authorized to modify this profile
        '404':
          description: One or more roles not found in profile