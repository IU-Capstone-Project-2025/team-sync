openapi: 3.0.3
info:
  title: Resume Service API
  description: API for managing user (student/professor) profile
  version: 1.0.0

servers:
  - url: http://localhost

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    BaseResponse:
      type: object
      description: Base response structure for all API responses
      properties:
        error:
          type: object
          nullable: true
          properties:
            code:
              type: string
              example: "VALIDATION_ERROR"
            text:
              type: string
              example: "Invalid input data"
        success:
          type: boolean

    ErrorResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              type: object
              nullable: true

    PaginatedResponse:
      type: object
      description: Paginated list response
      properties:
        items:
          type: array
          items:
            type: object
        total:
          type: integer
        page:
          type: integer
        pageSize:
          type: integer

    StudentProfileResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/Student'

    ProfessorProfileResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/Professor'

    UpdateStudentRequest:
      type: object
      description: Student profile update data
      properties:
        study_group:
          type: string
        description:
          type: string
        github_alias:
          type: string
        tg_alias:
          type: string
        skills:
          type: array
          items:
            type: string
        roles:
          type: array
          items:
            type: string

    UpdateProfessorRequest:
      type: object
      properties:
        tg_alias:
          type: string
          nullable: true

    Student:
      type: object
      description: Student profile information
      properties:
        id:
          type: integer
        person_id:
          type: integer
        study_group:
          type: string
          example: "CS-101"
        description:
          type: string
          nullable: true
        github_alias:
          type: string
        tg_alias:
          type: string
        skills:
          type: array
          items:
            $ref: '#/components/schemas/Skill'
        roles:
          type: array
          items:
            $ref: '#/components/schemas/Role'

    Professor:
      type: object
      description: Professor profile information
      properties:
        id:
          type: integer
        person_id:
          type: integer
        tg_alias:
          type: string
          nullable: true


    Skill:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
          nullable: true

    Role:
      type: object
      description: User role information
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
          nullable: true

paths:
  /student/profile/{person_id}:
    get:
      tags: [Profile]
      summary: Get student profile by ID
      description: Returns complete student profile information
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: person_id
          required: true
          schema:
            type: integer
          description: ID of the student whose profile is being requested
      responses:
        '200':
          description: Student profile retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentProfileResponse'
        '401':
          description: Unauthorized - Missing or invalid authentication token
        '403':
          description: Forbidden (user is not a student)
        '404':
          description: Student not found

    put:
      tags: [Profile]
      summary: Update student profile by person_id
      description: Update student profile information
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: person_id
          required: true
          schema:
            type: integer
          description: Student person id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStudentRequest'
      responses:
        '200':
          description: Student profile updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Invalid request
        '403':
          description: Forbidden
        '404':
          description: Student profile not found

  /professor/profile/{person_id}:
    get:
      tags: [Profile]
      summary: Get Professor profile by ID
      description: Returns complete professor profile information
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: person_id
          required: true
          schema:
            type: integer
          description: ID of the Professor whose profile is being requested
      responses:
        '200':
          description: Professor profile retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfessorProfileResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden (user is not a professor)
        '404':
          description: Professor not found

    put:
      tags: [Profile]
      summary: Update professor profile by person_id
      description: Update professor profile information
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: person_id
          required: true
          schema:
            type: integer
          description: Professor person id
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProfessorRequest'
      responses:
        '200':
          description: Professor profile updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Invalid request
        '403':
          description: Forbidden
        '404':
          description: Professor profile not found  

  /student/profile/{person_id}/skills:
    get:
      tags: [Profile]
      summary: Get skills of a profile
      description: Returns list of skills associated with the profile
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: person_id
          required: true
          schema:
            type: integer
          description: Person id
      responses:
        '200':
          description: List of skills for the profile
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Skill'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden

    post:
      tags: [Profile]
      summary: Add a skill to a profile
      description: Add new skill to user profile
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: person_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                skill_id:
                  type: integer
              required:
                - skill_id
      responses:
        '200':
          description: Skill added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Invalid input - skill_id is required or invalid
        '403':
          description: Forbidden - User not authorized to modify this profile
        '404':
          description: Skill not found

  /student/profile/{person_id}/skills/{skill_id}:
    delete:
      tags: [Profile]
      summary: Remove a skill from a profile
      description: Remove skill from user profile
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: person_id
          required: true
          schema:
            type: integer
        - in: path
          name: skill_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Skill removed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '403':
          description: Forbidden - User not authorized to modify this profile
        '404':
          description: Skill not found in profile


  /student/profile/{person_id}/roles:
    get:
      tags: [Profile]
      summary: Get roles of a profile
      description: Returns list of roles associated with the profile
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: person_id
          required: true
          schema:
            type: integer
          description: Person id
      responses:
        '200':
          description: List of roles for the profile
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      
    post:
      tags: [Profile]
      summary: Add a role to a profile
      description: Add new role to user profile
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: person_id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                role_id:
                  type: integer
              required:
                - role_id
      responses:
        '200':
          description: Role added successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '400':
          description: Invalid input - role_id is required or invalid
        '403':
          description: Forbidden - User not authorized to modify this profile
        '404':
          description: Role not found
    
  /student/profile/{person_id}/roles/{role_id}:
    delete:
      tags: [Profile]
      summary: Remove a role from a profile
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: person_id
          required: true
          schema:
            type: integer
        - in: path
          name: role_id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Role removed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
        '403':
          description: Forbidden - User not authorized to modify this profile
        '404':
          description: Role not found in profile